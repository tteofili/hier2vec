
Class based language models for machine translation (Wuebker et al., 2013) were
proposed to combat data sparsity by building a language model over automatically-
clustered words. The standard approach is to use a small number of classes (in the
hundreds). This LM is generally used in addition to standard word-based LMs.

Joshua 6 allows the use of arbitrary word-classes for the purpose of class language
model generation. The Joshua pipeline accepts a class map and proceeds to generate
a class LM if this file exists.
$JOSHUA/bin/pipeline.pl [...] -class-map map.txt [...]

Class maps can be enabled in the decoder directly by passing the -class-map ar-
gument to the instantiation of a language model feature:
$JOSHUA/bin/joshua-decoder -feature-function 'LanguageModel \
-path lm.kenlm -order 5 -class-map map.txt'
The class mapping file contains lines with a word followed by the class (space-

delimited).
