
The main feature of Joshua 6 is the introduction of a phrase-based decoder that is
tightly integrated with the existing codebase. The phrase-based decoder is a varia-
tion of the classic priority-queue algorithm for phrase-decoding (Koehn et al., 2003).
Briefly, the target-side sentence is built left-to-right, and the source sentence con-
sumed in any order, subject to the distortion limit (controlled by the -reordering-
limit flag, which defaults to 8). Joshua uses cube-pruning to moderate the search
(Chiang, 2007; Huang and Chiang, 2007). Decoding iterates over stacks organized
by the number of source words covered. A two-dimensional cube is constructed for
each pairing of (a) a group of hypotheses from smaller stacks with identical cover-
age vectors and (b) the set of translations of a permissible source phrase extension
of those hypotheses (with the number of translation options determined by -num-
translation-options, defaulting to 20). Each cube is then added to a priority queue.
Joshua iteratively consumes the top cube from the priority queue, extending the cube
(a) to the next hypothesis with the same coverage vector and (b) to the next transla-
tion, and adding these extensions to the priority queue. Popping proceeds until the
pop limit (-pop-limit, default 100) has been reached.
