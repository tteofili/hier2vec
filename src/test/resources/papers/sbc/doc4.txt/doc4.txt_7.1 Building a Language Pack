
Building a language pack is simple. Joshua provides a script, run_bundler.py
whose most important inputs are (a) a tuned Joshua configuration file and (b) the un-
filtered translation model. The bundler creates a new directory and copies the model
files into it, “packing” the Joshua translation model into its efficient binarized for-
mat. It then also copies the preprocessing scripts and the config file, relativizing path
names and updating them to point to the unfiltered, packed, translation model. Fi-
nally, a shell script is created that serves as the entry point to running the decoder. An

4Available at http://joshua-decoder.org/language-packs/

13

http://joshua-decoder.org/language-packs/


PBML 104 OCTOBER 2015

example usage follows, where a pipeline run has taken place in the current directory
and is being bundled into the directory language-pack:
$JOSHUA/bin/run_bundler.py tune/joshua.config.final language-pack \

--copy-config-options '-top-n 0 -output-format %s -mark-oovs false' \
--pack-grammar model/phrase-table.gz
The --copy-config-options parameters allows the config file options to be over-

ridden (the values listed are the defaults), and --pack-grammar points to the unfiltered
phrase table and requests that it be packed.
